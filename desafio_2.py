# -*- coding: utf-8 -*-
"""desafio_2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11ItrM4pCBZW3Nug6n9L747eU7833HKMY

# Carregar planilhas para o BigQuery

* Carregar duas planilhas para o BigQuery

* Planilha 1(ruas) carregamento simples

* Planilha 2(produtos) carregar para o bigquery e alterar e deixar o campo DTULTENT como data no bq
"""

#importando as bibliotecas
import pandas as pd
import os
import sys
from google.oauth2 import service_account
#exibir todas as colunas do dataframe
pd.set_option('display.max_columns',None)
from datetime import datetime, timedelta
from pandas import DataFrame

#ignorando os warnings
import warnings
warnings.filterwarnings('ignore')

#carregando o dataframe Ruas
ruas  = pd.read_excel('arquivos_excel/RUAS.xlsx')

ruas.head(2)

"""# Carregando dados para o BigQuery"""

credentials = service_account.Credentials.from_service_account_file(filename='chave_bq/KEY_BQ.json',
                                                                   scopes=["https://www.googleapis.com/auth/cloud-platform"])

ruas.to_gbq(credentials=credentials,
           destination_table='DataSet_DataFaker.ruas',
           if_exists='replace')

"""### Carregando os produtos"""

#Dataframe Produtos
produtos = pd.read_excel('arquivos_excel/CDDF_PRODUTOS.xlsx')

produtos.head(5)

"""#### Alterando o campo para data"""

#Convertendo a coluna para data
produtos['DTULTENT'] = pd.to_datetime(produtos['DTULTENT'], format="%d/%m/%Y")

produtos.head(4)

"""## Enviando dados para o BigQuery"""

produtos.to_gbq(credentials=credentials,
           destination_table='DataSet_DataFaker.Produtos',
           if_exists='replace', table_schema= [{'name':'DTULTENT','type': 'DATE'}])

